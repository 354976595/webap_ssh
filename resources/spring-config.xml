<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd"       >


    <!--<bean id="utf8" class="java.lang.String"> <constructor-arg value="utf-8"
        /> </bean> -->
    <!-- <context:property-placeholder location="classpath:jdbc.properties" -->
    <!-- file-encoding="utf8" /> -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!-- <value>classpath:redis.properties</value> -->
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
    <!-- 一、使用c3p0连接池注册数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 基础配置 -->
        <property name="jdbcUrl" value="${url}"></property>
        <property name="driverClass" value="${driverClassName}"></property>
        <property name="user" value="${username}"></property>
        <property name="password" value="${password}"></property>

        <!-- 关键配置 -->
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="3"></property>
        <!--连接池中保留的最小连接数。Default: 2 -->
        <property name="minPoolSize" value="2"></property>
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="15"></property>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="3"></property>

        <!-- 性能配置 -->
        <!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
        <property name="maxStatements" value="8"></property>
        <!-- maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
        <property name="maxStatementsPerConnection" value="5"></property>
        <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="1800"></property>
    </bean>
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"-->
          <!--destroy-method="close">-->
        <!--<property name="driverClassName" value="${driverClassName}"/>-->
        <!--<property name="url" value="${url}"/>-->
        <!--<property name="username" value="${username}"/>-->
        <!--<property name="password" value="${password}"/>-->
        <!--<property name="testOnBorrow" value="true"/>-->
        <!--<property name="validationQuery" value="select 1"/>-->
    <!--</bean>-->
    <!-- 使用jdbcTemplate处理大数据，jdbc可以一次不需要load那么多数据到内存中 -->
    <!-- <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> -->
    <!-- <property name="dataSource" ref="dataSource" /> -->
    <!-- </bean> -->

    <!-- 使用hibernate操作对象的增删改 -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/baoxiu</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.xjd.web.po</value>
            </list>
        </property>
    </bean>
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>



    <!-- 配置mybits -->
    <!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> -->
    <!-- <property name="dataSource" ref="dataSource"/> -->
    <!-- <property name="mapperLocations" value="classpath*:com/apep/**/mapper/**/*Mapper.xml"/> -->
    <!-- </bean> -->

    <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> -->
    <!-- <property name="basePackage" value="com/apep/**/mapper"/> -->
    <!-- </bean> -->

    <!-- 配置redis连接 -->
    <!-- <bean id="redisConfig" class="redis.clients.jedis.JedisPoolConfig"> -->
    <!-- <property name="maxActive" value="500"/> -->
    <!-- <property name="maxIdle" value="5"/> -->
    <!-- <property name="maxWait" value="10000"/> -->
    <!-- <property name="testOnBorrow" value="true"/> -->
    <!-- </bean> -->
    <!-- <bean id="redisPool" class="redis.clients.jedis.JedisPool"> -->
    <!-- <constructor-arg index="0" ref="redisConfig"/> -->
    <!-- <constructor-arg index="1" value="${redis_server}"/> -->
    <!-- <constructor-arg index="2" value="${redis_port}"/> -->
    <!-- </bean> -->


    <context:component-scan base-package=" com.xjd"/>
    <!-- <import resource="extendBean.xml" /> -->
    <!-- 定时任务 -->

    <!-- <import resource="task.xml" /> -->
</beans>
